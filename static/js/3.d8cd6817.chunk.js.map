{"version":3,"sources":["ui-components/Checkbox/index.tsx","components/AllProductsSideBar/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Pagination/index.tsx","containers/AllProductsPage/index.tsx","ui-components/Modal/index.tsx","components/ProductCardModalPriceUI/index.tsx","components/ProductCardModalQuantityUI/index.tsx","components/ProductCardModalVariantOptions/index.tsx","components/ProductCardModal/index.tsx","components/ProductCard/index.tsx"],"names":["Checkbox","props","handleCheckboxClick","newValue","state","value","setState","onChange","initialValue","iconClassName","this","className","onClick","aria-hidden","children","React","Component","AllProductsSideBar","productFilters","userFilters","onUpdateUserFilters","handleFilterChange","filterCategory","filterValue","newUserFilters","update","$push","$set","filter","val","Object","keys","map","filterValues","upperCaseFirstLetter","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","Pagination","currentSelectedPage","overrideSelectedPage","selectedPage","handleLeftCaretClick","newPage","handleRightCaretClick","numberOfPages","pageClick","page","renderPageButtons","index","Button","selected","ThemeContext","Consumer","theme","AllProductsPage","renderAllProducts","shopProducts","addToCart","products","product","ProductCard","id","handlePageChange","userSelectedPage","updateUserShopProductsPage","fetchShopProductsAndFilters","updateUserFilters","totalPages","connect","shop","user","filters","shopProductsPage","dispatch","ShopAction","fetchShopProducts","UserAction","options","productPurchase","Modal","root","el","removeOnClickPropagation","event","stopPropagation","onClickOutsideModalBody","document","querySelector","createElement","appendChild","removeChild","show","modalBodyClassName","ReactDOM","createPortal","ProductCardModalPriceUI","selectedVariant","discount","price","Fragment","getDiscountedPrice","ProductCardModalQuantityUI","quantity","onClickAdd","onClickMinus","ProductCardModalVariantOptions","variants","variantsOptionsAvailable","onColorChange","onSizeChange","renderVariantOptionsContainer","category","handleSizeChange","size","handleColorChange","color","sizesUI","colorsUI","processData","variantButtonClassName","forEach","includes","push","disabled","backgroundStyle","getBackgroundColorStyleForButton","style","ProductCardModal","handleClickQuantityAddButton","stock","handleClickQuantityMinusButton","variant","handleAddToCart","initialVariant","title","image","backgroundImage","type","onClickProductCard","showDetails","getProductVariantDetails"],"mappings":"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","file":"static/js/3.d8cd6817.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CheckboxProps, CheckboxState } from './interface';\r\nimport './style.css';\r\n\r\nclass Checkbox extends React.Component<CheckboxProps, CheckboxState> {\r\n    constructor(props: CheckboxProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.initialValue || false,\r\n        }\r\n    }\r\n\r\n    handleCheckboxClick = () => {\r\n        const newValue = !this.state.value;\r\n        this.setState({ value: newValue });\r\n\r\n        this.props.onChange(newValue);\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        const iconClassName = value ? 'fa fa-check-square' : 'fa fa-square-o'\r\n\r\n        return (\r\n            <label className=\"checkbox-container\" onClick={this.handleCheckboxClick}>\r\n                <i className={`${iconClassName} checkbox-icon`} aria-hidden=\"true\"></i>\r\n                <span className=\"checkbox-children\">{this.props.children}</span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport { ProductFilters } from '../../store/reducers/shopReducer';\r\nimport Checkbox from '../../ui-components/Checkbox';\r\nimport { upperCaseFirstLetter } from '../../utils/helper';\r\nimport { ProductFiltersProps } from './interface';\r\nimport './style.css';\r\nimport update from 'immutability-helper';\r\n\r\nexport const AllProductsSideBar: React.FC<ProductFiltersProps> = ({ productFilters, userFilters, onUpdateUserFilters }) => {\r\n\r\n    const handleFilterChange = (filterCategory: string, filterValue: string) => (value: boolean) => {\r\n        let newUserFilters: ProductFilters;\r\n\r\n        if(value) {\r\n            newUserFilters = update(userFilters, { [filterCategory]: { $push: [filterValue] } });\r\n        } else {\r\n            newUserFilters = update(userFilters,\r\n                {\r\n                    [filterCategory]: {\r\n                        $set: userFilters[filterCategory as keyof ProductFilters].filter(val => val !== filterValue )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        onUpdateUserFilters(newUserFilters);\r\n    }\r\n\r\n    const renderFilters = () => {\r\n        return Object.keys(productFilters).map(filterCategory => {\r\n            const filterValues = productFilters[filterCategory as keyof ProductFilters];\r\n\r\n            return (\r\n                <div key={filterCategory} className=\"product-filter\">\r\n                    <p>{upperCaseFirstLetter(filterCategory)}</p>\r\n                    {filterValues.map(filterValue => {\r\n                        return (\r\n                            <div key={filterValue} className=\"filter-checkbox\">\r\n                                <Checkbox onChange={handleFilterChange(filterCategory, filterValue)}>{filterValue}</Checkbox>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-products-side-bar\">\r\n            {renderFilters()}\r\n        </div>\r\n    )\r\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { PaginationProps, PaginationState } from './interface';\r\nimport './style.css';\r\n\r\nclass Pagination extends React.Component<PaginationProps, PaginationState> {\r\n    constructor(props: PaginationProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPage: 1\r\n        }\r\n    }\r\n\r\n    currentSelectedPage = () => {\r\n        const { overrideSelectedPage } = this.props;\r\n        const { selectedPage } = this.state;\r\n\r\n        return overrideSelectedPage || selectedPage;\r\n    }\r\n\r\n    handleLeftCaretClick = () => {\r\n\r\n        const currentSelectedPage = this.currentSelectedPage();\r\n\r\n        const newPage = currentSelectedPage === 1 ? currentSelectedPage : currentSelectedPage - 1;\r\n\r\n        this.setState({ selectedPage: newPage });\r\n        this.props.onChange(newPage);\r\n    }\r\n\r\n    handleRightCaretClick = () => {\r\n        const { numberOfPages, onChange } = this.props;\r\n\r\n        const currentSelectedPage = this.currentSelectedPage();\r\n\r\n        const newPage = currentSelectedPage === numberOfPages ? currentSelectedPage : currentSelectedPage + 1;\r\n\r\n        this.setState({ selectedPage: newPage });\r\n        onChange(newPage);\r\n    }\r\n\r\n    pageClick = (page: number) => () => {\r\n        const { selectedPage } = this.state;\r\n\r\n        if(selectedPage !== page) {\r\n            this.setState({ selectedPage: page });\r\n            this.props.onChange(page);\r\n        }\r\n    }\r\n\r\n    renderPageButtons = () => {\r\n        const { numberOfPages } = this.props;\r\n\r\n        const currentSelectedPage = this.currentSelectedPage();\r\n\r\n        return [...new Array(numberOfPages)].map((value, index) => {\r\n            const page = index + 1;\r\n\r\n            return (\r\n                <Button\r\n                    key={page}\r\n                    selected={currentSelectedPage === page}\r\n                    onClick={this.pageClick(page)}\r\n                    className=\"page-button\"\r\n                >\r\n                    {page}\r\n                </Button>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {theme => (\r\n                    <div className={`pagination-container ${theme}`}>\r\n                        <i onClick={this.handleLeftCaretClick} className=\"fa fa-caret-left page-caret\" aria-hidden=\"true\"></i>\r\n                        <div className=\"pages-container\">\r\n                            {this.renderPageButtons()}\r\n                        </div>\r\n                        <i onClick={this.handleRightCaretClick} className=\"fa fa-caret-right page-caret\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\r\nimport { AllProductsSideBar } from '../../components/AllProductsSideBar';\r\nimport Pagination from '../../components/Pagination';\r\nimport { ProductCard } from '../../components/ProductCard';\r\nimport ShopAction from '../../store/actions/shopAction';\r\nimport UserAction from '../../store/actions/userAction';\r\nimport { StoreStateType } from '../../store/rootReducer';\r\nimport { Modal } from '../../ui-components/Modal';\r\nimport { AllProductsDispatchToProps, AllProductsOwnProps, AllProductsPageProps, AllProductsStateProps } from './interface';\r\nimport './style.css';\r\n\r\nclass AllProductsPage extends React.Component<AllProductsPageProps> {\r\n    componentDidMount() {\r\n        const { shopProducts } = this.props;\r\n\r\n        if(!shopProducts.products.length) {\r\n            this.props.fetchShopProductsAndFilters();\r\n        }\r\n    }\r\n\r\n    renderAllProducts = () => {\r\n        const { shopProducts, addToCart } = this.props;\r\n        return shopProducts.products.map((product) => {\r\n            return (\r\n                <div key={product.id} className=\"product-item-container\">\r\n                    <ProductCard\r\n                        product={product}\r\n                        addToCart={addToCart}\r\n                    />\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    handlePageChange = (selectedPage: number) => {\r\n        const { userSelectedPage, updateUserShopProductsPage } = this.props;\r\n\r\n        if(userSelectedPage !== selectedPage) updateUserShopProductsPage(selectedPage);\r\n    }\r\n\r\n    render() {\r\n        const { productFilters, userFilters, updateUserFilters, shopProducts, userSelectedPage } = this.props;\r\n        return (\r\n            <div className=\"all-products-page-container\">\r\n                <AllProductsSideBar onUpdateUserFilters={updateUserFilters} userFilters={userFilters} productFilters={productFilters} />\r\n                <div className=\"all-products-container\">\r\n                    <div className=\"all-products\">\r\n                        {this.renderAllProducts()}\r\n                    </div>\r\n                    <Pagination overrideSelectedPage={userSelectedPage} onChange={this.handlePageChange} numberOfPages={shopProducts.totalPages} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<AllProductsStateProps, AllProductsOwnProps, StoreStateType> = (state) => {\r\n    const { shopProducts, productFilters } = state.shop;\r\n    const { filters, shopProductsPage } = state.user;\r\n    return {\r\n        shopProducts: shopProducts,\r\n        productFilters: productFilters,\r\n        userFilters: filters,\r\n        userSelectedPage: shopProductsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsFunction<AllProductsDispatchToProps, AllProductsOwnProps> = (dispatch) => {\r\n    const { fetchShopProducts, fetchShopProductsAndFilters } = new ShopAction();\r\n    const { updateUserFilters, updateUserShopProductsPage, addToCart } = new UserAction();\r\n    return {\r\n        fetchShopProducts:(options) => dispatch(fetchShopProducts(options)),\r\n        fetchShopProductsAndFilters: () => dispatch(fetchShopProductsAndFilters()),\r\n        updateUserFilters: (filters) => dispatch(updateUserFilters(filters)),\r\n        updateUserShopProductsPage: (shopProductsPage) => dispatch(updateUserShopProductsPage(shopProductsPage)),\r\n        addToCart: (productPurchase) => dispatch(addToCart(productPurchase)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProductsPage);","import React from 'react';\r\nimport { ModalProps } from './interface';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\n\r\nexport class Modal extends React.Component<ModalProps> {\r\n    root: HTMLDivElement;\r\n    el: HTMLDivElement;\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.root = document.querySelector(\"#root\") as HTMLDivElement;\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.root.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    removeOnClickPropagation = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onClickOutsideModalBody = () => {\r\n        const { onClickOutsideModalBody } = this.props;\r\n\r\n        onClickOutsideModalBody && onClickOutsideModalBody();\r\n    }\r\n\r\n    render() {\r\n        const { show = true, modalBodyClassName } = this.props;\r\n        return show ? ReactDOM.createPortal(\r\n            <div onClick={this.removeOnClickPropagation} className=\"modal-container\">\r\n                <div onClick={this.onClickOutsideModalBody} className=\"modal-overlay\" />\r\n                <div className={`modal-body ${modalBodyClassName || ''}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>,\r\n            this.el\r\n        ) : null;\r\n    }\r\n}","import React from 'react';\r\nimport { getDiscountedPrice } from '../../utils/product';\r\nimport { ProductCardModalPriceUIProps } from './interface';\r\n\r\nexport const ProductCardModalPriceUI: React.FC<ProductCardModalPriceUIProps> = ({ selectedVariant }) => {\r\n    const { discount, price } = selectedVariant;\r\n\r\n    const priceUI = (\r\n        <p className=\"price-ui\">\r\n            {discount ? (\r\n                <React.Fragment>\r\n                    <del className=\"old-price\">{price}</del>\r\n                    <ins>${getDiscountedPrice(price, discount)}</ins>\r\n                </React.Fragment>\r\n            ): <ins>{price}</ins>}\r\n        </p>\r\n    );\r\n\r\n    return priceUI;\r\n}","import React from 'react';\r\nimport { ProductCardModalQuantityUIProps } from './interface';\r\n\r\nexport const ProductCardModalQuantityUI: React.FC<ProductCardModalQuantityUIProps> = ({ quantity, onClickAdd, onClickMinus }) => {\r\n    return (\r\n        <div className=\"quantity-container\">\r\n            <label className=\"quantity-container-label\">\r\n                <div><i onClick={onClickMinus} className=\"fa fa-minus qty-button\"></i></div>\r\n                <span className=\"qty-value\">QTY {quantity}</span>\r\n                <div><i onClick={onClickAdd} className=\"fa fa-plus qty-button\"></i></div>\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { getBackgroundColorStyleForButton } from '../../utils/product';\r\nimport { ProductCardModalVariantOptionsProps } from './interface';\r\n\r\nexport const ProductCardModalVariantOptions: React.FC<ProductCardModalVariantOptionsProps> = \r\n    ({ variants, selectedVariant, variantsOptionsAvailable, onColorChange, onSizeChange }) => {\r\n\r\n    const renderVariantOptionsContainer = (category: string, options: React.ReactNode[]) => {\r\n        return (\r\n            <div className=\"variant-container\">\r\n                <p className=\"variant-option-header\">{category}</p>\r\n                <div className=\"variant-option\">\r\n                    {options}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSizeChange = (size: string) => () => {\r\n        onSizeChange(size);\r\n    }\r\n\r\n    const handleColorChange = (color: string) => () => {\r\n        onColorChange(color);\r\n    }\r\n\r\n    const sizesUI: React.ReactNode[] = [];\r\n    const colorsUI: React.ReactNode[] = [];\r\n\r\n    const processData: string[] = [];\r\n\r\n    const variantButtonClassName = 'variant-option-button';\r\n\r\n    variants.forEach(({ size, color }) => {\r\n        if (!processData.includes(size)) {\r\n            sizesUI.push(\r\n                <Button\r\n                    className={`${variantButtonClassName} size`}\r\n                    onClick={handleSizeChange(size)}\r\n                    key={size}\r\n                    selected={selectedVariant.size === size}\r\n                    disabled={!variantsOptionsAvailable[size]}\r\n                >\r\n                    {size}\r\n                </Button>\r\n            );\r\n        }\r\n\r\n        processData.push(size);\r\n    });\r\n\r\n    variantsOptionsAvailable[selectedVariant.size].forEach(color => {\r\n        const backgroundStyle: React.CSSProperties = getBackgroundColorStyleForButton(color);\r\n\r\n        colorsUI.push(\r\n            <Button\r\n                style={backgroundStyle}\r\n                className={`${variantButtonClassName} color`}\r\n                key={color}\r\n                onClick={handleColorChange(color)}\r\n                selected={selectedVariant.color === color}\r\n            />\r\n\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className=\"variant-options-container\">\r\n            {renderVariantOptionsContainer('Sizes', sizesUI)}\r\n            {renderVariantOptionsContainer('Colors', colorsUI)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { Modal } from '../../ui-components/Modal';\r\nimport { ProductCardModalPriceUI } from '../ProductCardModalPriceUI';\r\nimport { ProductCardModalQuantityUI } from '../ProductCardModalQuantityUI';\r\nimport { ProductCardModalVariantOptions } from '../ProductCardModalVariantOptions';\r\nimport { ProductCardModalProps, ProductCardModalState } from './interface';\r\nimport './style.css';\r\n\r\nexport class ProductCardModal extends React.Component<ProductCardModalProps, ProductCardModalState> {\r\n    constructor(props: ProductCardModalProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            selectedVariant: props.initialVariant,\r\n            quantity: 1\r\n        }\r\n    }\r\n\r\n    handleClickQuantityAddButton = () => {\r\n        const { quantity, selectedVariant } = this.state;\r\n\r\n        selectedVariant.stock > quantity && this.setState({ quantity: quantity + 1 });\r\n    }\r\n\r\n    handleClickQuantityMinusButton = () => {\r\n        const { quantity } = this.state;\r\n\r\n        quantity > 1 && this.setState({ quantity: quantity - 1 });\r\n    }\r\n\r\n    handleSizeChange = (size: string) => {\r\n        const { selectedVariant } = this.state;\r\n        const { variants } = this.props;\r\n\r\n        if(selectedVariant.size !== size) {\r\n            this.setState({\r\n                selectedVariant: variants.filter(variant => variant.size === size && variant.stock > 0)[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorChange = (color: string) => {\r\n        const { selectedVariant } = this.state;\r\n        const { variants } = this.props;\r\n        \r\n        if(selectedVariant.color !== color) {\r\n            this.setState({\r\n                selectedVariant: variants.filter(variant => variant.size === selectedVariant.size && variant.color === color && variant.stock > 0)[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        const { selectedVariant, quantity } = this.state;\r\n        this.props.addToCart({ ...selectedVariant, quantity });\r\n    }\r\n\r\n    render() {\r\n        const { show, onClickOutsideModalBody, variants, variantsOptionsAvailable } = this.props;\r\n        const { selectedVariant, quantity } = this.state;\r\n        const { title, image } = selectedVariant;\r\n\r\n        return (\r\n            <Modal onClickOutsideModalBody={onClickOutsideModalBody} modalBodyClassName=\"product-card-modal-body\" show={show}>\r\n                <div className=\"modal-product-details-container\">\r\n                    <div className=\"modal-product-image-container\">\r\n                        <div style={{ backgroundImage: `url(${image})` }} className=\"modal-product-image\" />\r\n                    </div>\r\n                    <div className=\"modal-product-details\">\r\n                        <p className=\"modal-product-name\">{title}</p>\r\n                        <ProductCardModalPriceUI selectedVariant={selectedVariant} />\r\n                        <ProductCardModalQuantityUI\r\n                            quantity={quantity}\r\n                            onClickAdd={this.handleClickQuantityAddButton}\r\n                            onClickMinus={this.handleClickQuantityMinusButton}\r\n                        />\r\n                        <ProductCardModalVariantOptions\r\n                            selectedVariant={selectedVariant}\r\n                            variants={variants} \r\n                            onSizeChange={this.handleSizeChange}\r\n                            onColorChange={this.handleColorChange}\r\n                            variantsOptionsAvailable={variantsOptionsAvailable}\r\n                        />\r\n                        <Button type=\"primary\" onClick={this.handleAddToCart} className=\"add-to-cart-button\" >\r\n                            Add To Cart\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport { ProductPurchase } from '../../store/reducers/userReducer';\r\nimport { getProductVariantDetails } from '../../utils/product';\r\nimport { ProductCardModal } from '../ProductCardModal';\r\nimport { ProductCardProps, ProductCardState } from './interface';\r\nimport './style.css';\r\n\r\nexport class ProductCard extends React.Component<ProductCardProps, ProductCardState> {\r\n    constructor(props: ProductCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            showDetails: false\r\n        }\r\n    }\r\n\r\n    onClickProductCard = () => {\r\n        this.setState({ showDetails: true });\r\n    }\r\n\r\n    onClickOutsideModalBody = () => {\r\n        this.setState({ showDetails: false });\r\n    }\r\n\r\n    handleAddToCart = (product: ProductPurchase) => {\r\n        this.props.addToCart(product);\r\n        this.setState({ showDetails: false });\r\n    }\r\n\r\n    render() {\r\n        const { showDetails } = this.state;\r\n        const { product, addToCart } = this.props;\r\n        const { initialVariant, variants, variantsOptionsAvailable } = getProductVariantDetails(product);\r\n\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {theme => (\r\n                    initialVariant ? (\r\n                        <div onClick={this.onClickProductCard} className={`product-card-container ${theme}`}>\r\n                            <div style={{ backgroundImage: `url(${initialVariant.image})` }} className=\"product-image\" />\r\n                            <div className=\"product-details\">\r\n                                <p>{initialVariant.title}</p>\r\n                            </div>\r\n                            <ProductCardModal\r\n                                onClickOutsideModalBody={this.onClickOutsideModalBody} \r\n                                show={showDetails}\r\n                                initialVariant={initialVariant} \r\n                                variants={variants} \r\n                                variantsOptionsAvailable={variantsOptionsAvailable}\r\n                                addToCart={this.handleAddToCart}\r\n                            />\r\n                        </div>\r\n                    ) : null\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}