{"version":3,"sources":["constants/product.ts","components/CheckoutPageProduct/index.tsx","constants/user.ts","ui-components/Input/index.tsx","components/CustomerInformation/index.tsx","containers/CheckoutPage/index.tsx","ui-components/Modal/index.tsx"],"names":["SIZE","XS","S","M","L","XL","CheckoutPageProduct","product","title","image","size","color","quantity","subTotalPrice","getSubtotalPrice","styleColor","getBackgroundColorStyleForButton","className","style","backgroundImage","upperCaseFirstLetter","CUSTOMER_INFORMATION_FIELDS_LIST","completeName","address","city","stateOrProvince","mobileNo","CUSTOMER_INFORMATION_FIELD_WIDTH","CUSTOMER_INFORMATION_FIELD_ERROR","CUSTOMER_INFORMATION_FIELD_INITIAL_STATE","Input","onChange","error","positive","inputStyle","inputContainerStyle","label","inputRef","overrideClassName","ref","CustomerInformation","props","fieldRefs","validateInputField","field","value","errorMessage","setState","state","handleInputOnChange","event","hasCompletePurchaseClick","currentTarget","renderInputFields","Object","keys","map","customerInfoField","marginBottom","width","allFieldsAreValid","hasError","hasFocusToErrorField","forEach","key","stateKey","fieldRef","current","focus","handleButtonClick","cart","ShopAPI","postOrder","user","omit","then","showThankyouModal","handleShopMoreClick","cleanCart","history","push","ROUTE","ALL_PRODUCTS","React","createRef","this","Button","type","onClick","Modal","modalBodyClassName","show","Component","CheckoutPage","getCartDetails","cartItems","totalPrice","index","productId","variantId","length","aria-hidden","to","HOME","connect","dispatch","UserAction","root","el","removeOnClickPropagation","stopPropagation","onClickOutsideModalBody","document","querySelector","createElement","appendChild","removeChild","ReactDOM","createPortal","children"],"mappings":"iRAIaA,EAAc,CACvBC,GAAI,aACJC,EAAG,QACHC,EAAG,SACHC,EAAG,QACHC,GAAI,c,gBCFKC,G,OAA0D,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9DC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,KAAMC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SAE7BC,EAAgBC,YAAiBP,GAEjCQ,EAAaC,YAAiCL,GAEpD,OACI,sBAAKM,UAAU,kCAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKC,MAAO,CAAEC,gBAAgB,OAAD,OAASV,EAAT,MAAqBQ,UAAU,oBAEhE,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAb,SAA6BT,IAC7B,4BAAIR,EAAKU,KACT,qBAAKF,MAAOY,YAAqBT,GAAQO,MAAOH,EAAYE,UAAU,aAE1E,qBAAKA,UAAU,WAAf,SACI,sCAASL,OAEb,qBAAKK,UAAU,iBAAf,SACI,4CAAeJ,Y,gCCtBlBQ,EAAkE,CAC3EC,aAAc,2CACdC,QAAS,sCACTC,KAAM,OACNC,gBAAiB,iBACjBC,SAAU,YAGDC,EAAmC,oBAEnCC,EAAmC,8BAEnCC,EAA0E,CACnFP,aAAc,GACdC,QAAS,GACTC,KAAM,GACNC,gBAAiB,GACjBC,SAAU,I,QCnBDI,G,OAA8B,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,MAAOC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,oBAAqBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvGC,GAAqBN,EAAS,WAAgBC,GAAY,gBAAkB,GAElF,OACI,sBAAKf,MAAOiB,EAAqBlB,UAAU,kBAA3C,UACI,qBAAKA,UAAU,QAAf,SAAwBmB,IACxB,uBAAOG,IAAKF,EAAUnB,MAAOgB,EAAYH,SAAUA,EAAUd,UAAWqB,IACtEN,GAAS,qBAAKf,UAAU,gBAAf,SAAgCe,S,QC2IxCQ,G,yDAxIX,WAAYC,GAAiC,IAAD,8BACxC,cAAMA,IAHVC,UAA0C,GAEE,EAgB5CC,mBAAqB,SAACC,EAAiCC,GACnD,IAAMC,EAAeD,EAAQ,GAAKjB,EAElC,EAAKmB,SAAS,CACVf,MAAM,2BACC,EAAKgB,MAAMhB,OADb,kBAEAY,EAAQE,OAtBuB,EA2B5CG,oBAAsB,SAACL,GAAD,OAAqC,SAACM,GAAgD,IAChGC,EAA6B,EAAKH,MAAlCG,yBACAN,EAAUK,EAAME,cAAhBP,MAER,EAAKE,SAAL,eACKH,EAAQC,IAGbM,GAA4B,EAAKR,mBAAmBC,EAAOC,KAnCnB,EAsC5CQ,kBAAoB,WAAO,IACfrB,EAAU,EAAKgB,MAAfhB,MAER,OAAOsB,OAAOC,KAAKlC,GAAkCmC,KAAI,SAAAZ,GACrD,IAAMa,EAAoBb,EACpBR,EAAQf,EAAiCoC,GAE/C,OACI,cAAC,EAAD,CAEItB,oBAAqB,CAAEuB,aAAc,QACrCxB,WAAY,CAAEyB,MAAOhC,GACrBS,MAAOA,EACPL,SAAU,EAAKkB,oBAAoBQ,GACnCzB,MAAOA,EAAMyB,GACbxB,WAAY,EAAKe,MAAMS,GACvBpB,SAAU,EAAKK,UAAUe,IAPpBrB,OA/CuB,EA4D5CwB,kBAAoB,WAChB,IAAIC,GAAW,EACT7B,EAAoC,eACnCH,GAGHiC,GAAuB,EAmB3B,OAjBAR,OAAOC,KAAKlC,GAAkC0C,SAAQ,SAAAC,GAClD,IAAMC,EAAWD,EAEjB,IAAI,EAAKhB,MAAMiB,KACXjC,EAAMiC,GAAYrC,EAClBiC,GAAW,GAEPC,GAAsB,CACtBA,GAAuB,EACvB,IAAMI,EAAW,EAAKxB,UAAUuB,GAChCC,EAASC,SAAWD,EAASC,QAAQC,YAKjD,EAAKrB,SAAS,CAAEf,WAER6B,GArFgC,EAwF5CQ,kBAAoB,WAAO,IACfC,EAAS,EAAK7B,MAAd6B,MACR,EAAKvB,SAAS,CAAEI,0BAA0B,IACvC,EAAKS,uBACY,IAAIW,KAEZC,UAAU,CACdF,OACAG,KAAK,eACEC,YAAK,EAAK1B,MAAO,CAAC,QAAS,gCAEnC2B,MAAK,WACJ,EAAK5B,SAAS,CAAE6B,mBAAmB,QApGH,EAyG5CC,oBAAsB,WAAO,IAAD,EACO,EAAKpC,MAA5BqC,EADgB,EAChBA,UAAWC,EADK,EACLA,QAEnBD,IACAC,EAAQC,KAAKC,IAAMC,eA1GnB,EAAKlC,MAAL,2BACOnB,GADP,IAEIG,MAAM,eAAMH,GACZsB,0BAA0B,EAC1ByB,mBAAmB,IAGvBtB,OAAOC,KAAKlC,GAAkC0C,SAAQ,SAAAC,GAClD,IAAMC,EAAWD,EACjB,EAAKtB,UAAUuB,GAAYkB,IAAMC,eAZG,E,qDAgHlC,IACER,EAAsBS,KAAKrC,MAA3B4B,kBACR,OACI,sBAAK3D,UAAU,0BAAf,UACI,qBAAKA,UAAU,eAAf,iCACCoE,KAAKhC,oBACN,cAACiC,EAAA,EAAD,CACIpE,MAAO,CAAEyC,MAAOhC,GAChB4D,KAAK,UACLC,QAASH,KAAKhB,kBACdpD,UAAU,wBAJd,+BAQA,eAACwE,EAAA,EAAD,CAAOC,mBAAmB,2BAA2BC,KAAMf,EAA3D,UACI,qBAAK3D,UAAU,SAAf,qDACA,6FACA,cAACqE,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAASH,KAAKR,oBAArC,iC,GApIcM,IAAMS,Y,QCClCC,G,mNACFC,eAAiB,WAAO,IACZxB,EAAS,EAAK7B,MAAd6B,KAEFyB,EAA+B,GACjCC,EAAa,EAUjB,OARA1B,EAAKP,SAAQ,SAACxD,EAAS0F,GAChBA,EAAQ,GAAGF,EAAUf,KAAK,qBAA8B/D,UAAU,WAAxC,kBAAqBgF,KAElDF,EAAUf,KAAK,cAAC,EAAD,CAAqBzE,QAASA,GAA9B,UAA+CA,EAAQ2F,UAAvD,YAAoE3F,EAAQ4F,aAE3FH,GAAclF,YAAiBP,MAG5B,CACHwF,YACAC,e,uDAIE,IAAD,EACgCX,KAAK5C,MAAlC6B,EADH,EACGA,KAAMQ,EADT,EACSA,UAAWC,EADpB,EACoBA,QADpB,EAE6BM,KAAKS,iBAA/BC,EAFH,EAEGA,UAAWC,EAFd,EAEcA,WAEnB,OAAO1B,EAAK8B,OACR,sBAAKnF,UAAU,0BAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,wCAAWqD,EAAK8B,UAChB,sBAAKnF,UAAU,qBAAf,UACI,mBAAGA,UAAU,cAAcoF,cAAY,SACvC,wDAGR,qBAAKpF,UAAU,aAAf,SACK8E,IAEL,sBAAK9E,UAAU,oBAAf,UACI,qBAAKA,UAAU,OAAf,mBACA,sBAAKA,UAAU,cAAf,cAA+B+E,WAGvC,cAAC,EAAD,CAAqBjB,QAASA,EAAST,KAAMA,EAAMQ,UAAWA,OAElE,cAAC,IAAD,CAAUwB,GAAIrB,IAAMsB,W,GA7CLpB,IAAMS,YAiElBY,uBAhBwF,SAACxD,GAGpG,MAAO,CACHsB,KAHatB,EAAMyB,KAAfH,SAO4F,SAACmC,GAAc,IAC3G3B,GAAc,IAAI4B,KAAlB5B,UAER,MAAO,CACHA,UAAW,kBAAM2B,EAAS3B,SAInB0B,CAA6CX,I,8ICxE/CJ,G,MAAb,kDAGI,WAAYhD,GAAoB,IAAD,8BAC3B,cAAMA,IAHVkE,UAE+B,IAD/BC,QAC+B,IAe/BC,yBAA2B,SAAC3D,GACxBA,EAAM4D,mBAhBqB,EAmB/BC,wBAA0B,WAAO,IACrBA,EAA4B,EAAKtE,MAAjCsE,wBAERA,GAA2BA,KAnB3B,EAAKJ,KAAOK,SAASC,cAAc,SACnC,EAAKL,GAAKI,SAASE,cAAc,OAJN,EAHnC,gEAWQ7B,KAAKsB,KAAKQ,YAAY9B,KAAKuB,MAXnC,6CAeQvB,KAAKsB,KAAKS,YAAY/B,KAAKuB,MAfnC,+BA4Bc,IAAD,EACuCvB,KAAK5C,MAD5C,IACGkD,YADH,SACgBD,EADhB,EACgBA,mBACrB,OAAOC,EAAO0B,IAASC,aACnB,sBAAK9B,QAASH,KAAKwB,yBAA0B5F,UAAU,kBAAvD,UACI,qBAAKuE,QAASH,KAAK0B,wBAAyB9F,UAAU,kBACtD,qBAAKA,UAAS,qBAAgByE,GAAsB,IAApD,SACKL,KAAK5C,MAAM8E,cAGpBlC,KAAKuB,IACL,SAtCZ,GAA2BzB,IAAMS,a","file":"static/js/5.8718357c.chunk.js","sourcesContent":["export interface SIZES {\r\n    [size: string] : string;\r\n}\r\n\r\nexport const SIZE: SIZES = {\r\n    XS: 'Xtra Small',\r\n    S: 'Small',\r\n    M: 'Medium',\r\n    L: 'Large',\r\n    XL: 'Xtra Large'\r\n}","import React from 'react';\r\nimport { SIZE } from '../../constants/product';\r\nimport { upperCaseFirstLetter } from '../../utils/helper';\r\nimport { getBackgroundColorStyleForButton, getSubtotalPrice } from '../../utils/product';\r\nimport { CheckoutPageProductProps } from './interface';\r\nimport './style.css';\r\n\r\nexport const CheckoutPageProduct: React.FC<CheckoutPageProductProps> = ({ product }) => {\r\n    const { title, image, size, color, quantity } = product;\r\n\r\n    const subTotalPrice = getSubtotalPrice(product);\r\n\r\n    const styleColor = getBackgroundColorStyleForButton(color);\r\n\r\n    return (\r\n        <div className=\"checkout-page-product-container\">\r\n            <div className=\"image-container\">\r\n                <div style={{ backgroundImage: `url(${image})` }} className=\"product-image\" />\r\n            </div>\r\n            <div className=\"product-details\">\r\n                <p className=\"product-name\">{title}</p>\r\n                <p>{SIZE[size]}</p>\r\n                <div title={upperCaseFirstLetter(color)} style={styleColor} className=\"color\" />\r\n            </div>\r\n            <div className=\"quantity\">\r\n                <p>QTY: {quantity}</p>\r\n            </div>\r\n            <div className=\"subtotal-price\">\r\n                <p>Subtotal: ${subTotalPrice}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export type CustomerInformationField = 'completeName' | 'address' | 'city' | 'stateOrProvince' | 'mobileNo';\r\n\r\nexport type CustomerInformationFieldsList = {\r\n    [field in CustomerInformationField]: string;\r\n};\r\n\r\nexport const CUSTOMER_INFORMATION_FIELDS_LIST: CustomerInformationFieldsList = {\r\n    completeName: 'Complete Name (LastName, FirstName M.I.)',\r\n    address: 'Address (House #, Lot, Blk, Street)',\r\n    city: 'City',\r\n    stateOrProvince: 'State/Province',\r\n    mobileNo: 'Mobile #',\r\n}\r\n\r\nexport const CUSTOMER_INFORMATION_FIELD_WIDTH = 'Calc(100% - 20px)';\r\n\r\nexport const CUSTOMER_INFORMATION_FIELD_ERROR = 'Please complete this field.';\r\n\r\nexport const CUSTOMER_INFORMATION_FIELD_INITIAL_STATE: CustomerInformationFieldsList = {\r\n    completeName: '',\r\n    address: '',\r\n    city: '',\r\n    stateOrProvince: '',\r\n    mobileNo: '',\r\n};","import React from 'react';\r\nimport { InputProps } from './interface';\r\nimport './style.css';\r\n\r\nexport const Input: React.FC<InputProps> = ({ onChange, error, positive, inputStyle, inputContainerStyle, label, inputRef }) => {\r\n    const overrideClassName = (error && 'error-ui') || (positive && 'positive-ui') || '';\r\n\r\n    return (\r\n        <div style={inputContainerStyle} className=\"input-container\">\r\n            <div className=\"label\">{label}</div>\r\n            <input ref={inputRef} style={inputStyle} onChange={onChange} className={overrideClassName} />\r\n            { error && <div className=\"error-message\">{error}</div> }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ShopAPI from '../../api/shopAPI';\r\nimport { ROUTE } from '../../constants/route';\r\nimport { CustomerInformationField, CustomerInformationFieldsList, CUSTOMER_INFORMATION_FIELDS_LIST, CUSTOMER_INFORMATION_FIELD_ERROR, CUSTOMER_INFORMATION_FIELD_INITIAL_STATE, CUSTOMER_INFORMATION_FIELD_WIDTH } from '../../constants/user';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { Input } from '../../ui-components/Input';\r\nimport { Modal } from '../../ui-components/Modal';\r\nimport { omit } from '../../utils/helper';\r\nimport { CustomerInformationFieldRefs, CustomerInformationProps, CustomerInformationState } from './interface';\r\nimport './style.css';\r\n\r\nclass CustomerInformation extends React.Component<CustomerInformationProps, CustomerInformationState> {\r\n    fieldRefs: CustomerInformationFieldRefs = {} as CustomerInformationFieldRefs;\r\n\r\n    constructor(props: CustomerInformationProps){\r\n        super(props);\r\n\r\n        this.state = {\r\n            ...CUSTOMER_INFORMATION_FIELD_INITIAL_STATE,\r\n            error: { ...CUSTOMER_INFORMATION_FIELD_INITIAL_STATE },\r\n            hasCompletePurchaseClick: false,\r\n            showThankyouModal: false,\r\n        }\r\n\r\n        Object.keys(CUSTOMER_INFORMATION_FIELDS_LIST).forEach(key => {\r\n            const stateKey = key as CustomerInformationField;\r\n            this.fieldRefs[stateKey] = React.createRef();\r\n        });\r\n    }\r\n\r\n    validateInputField = (field: CustomerInformationField, value: string) => {\r\n        const errorMessage = value ? '' : CUSTOMER_INFORMATION_FIELD_ERROR;\r\n\r\n        this.setState({\r\n            error: {\r\n                ...this.state.error,\r\n                [field]: errorMessage,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleInputOnChange = (field: CustomerInformationField) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { hasCompletePurchaseClick } = this.state;\r\n        const { value } = event.currentTarget;\r\n\r\n        this.setState({\r\n            [field]: value\r\n        } as CustomerInformationFieldsList);\r\n\r\n        hasCompletePurchaseClick && this.validateInputField(field, value);\r\n    }\r\n\r\n    renderInputFields = () => {\r\n        const { error } = this.state;\r\n\r\n        return Object.keys(CUSTOMER_INFORMATION_FIELDS_LIST).map(field => {\r\n            const customerInfoField = field as CustomerInformationField;\r\n            const label = CUSTOMER_INFORMATION_FIELDS_LIST[customerInfoField];\r\n\r\n            return (\r\n                <Input\r\n                    key={label}\r\n                    inputContainerStyle={{ marginBottom: '10px' }}\r\n                    inputStyle={{ width: CUSTOMER_INFORMATION_FIELD_WIDTH }}\r\n                    label={label}\r\n                    onChange={this.handleInputOnChange(customerInfoField)}\r\n                    error={error[customerInfoField]}\r\n                    positive={!!this.state[customerInfoField]}\r\n                    inputRef={this.fieldRefs[customerInfoField]}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    allFieldsAreValid = () => {\r\n        let hasError = false;\r\n        const error: CustomerInformationFieldsList = {\r\n            ...CUSTOMER_INFORMATION_FIELD_INITIAL_STATE\r\n        };\r\n\r\n        let hasFocusToErrorField = false;\r\n\r\n        Object.keys(CUSTOMER_INFORMATION_FIELDS_LIST).forEach(key => {\r\n            const stateKey = key as CustomerInformationField;\r\n\r\n            if(!this.state[stateKey]) {\r\n                error[stateKey] = CUSTOMER_INFORMATION_FIELD_ERROR;\r\n                hasError = true;\r\n\r\n                if(!hasFocusToErrorField) {\r\n                    hasFocusToErrorField = true;\r\n                    const fieldRef = this.fieldRefs[stateKey];\r\n                    fieldRef.current && fieldRef.current.focus();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({ error });\r\n\r\n        return !hasError;\r\n    }\r\n\r\n    handleButtonClick = () => {\r\n        const { cart } = this.props;\r\n        this.setState({ hasCompletePurchaseClick: true })\r\n        if(this.allFieldsAreValid()){\r\n            const shopApi = new ShopAPI();\r\n\r\n            shopApi.postOrder({\r\n                cart,\r\n                user: {\r\n                    ...omit(this.state, ['error', 'hasCompletePurchaseClick'])\r\n                }\r\n            }).then(() => {\r\n                this.setState({ showThankyouModal: true });\r\n            })\r\n        }\r\n    }\r\n\r\n    handleShopMoreClick = () => {\r\n        const { cleanCart, history } = this.props;\r\n\r\n        cleanCart();\r\n        history.push(ROUTE.ALL_PRODUCTS);\r\n    }\r\n\r\n    render() {\r\n        const { showThankyouModal } = this.state;\r\n        return (\r\n            <div className=\"customer-info-container\">\r\n                <div className=\"heading text\">Billing Information</div>\r\n                {this.renderInputFields()}\r\n                <Button\r\n                    style={{ width: CUSTOMER_INFORMATION_FIELD_WIDTH }}\r\n                    type=\"primary\"\r\n                    onClick={this.handleButtonClick}\r\n                    className=\"complete-purchase-btn\"\r\n                >\r\n                    Complete Purchase\r\n                </Button>\r\n                <Modal modalBodyClassName=\"customer-info-modal-body\" show={showThankyouModal}>\r\n                    <div className=\"header\">Thank you! We have received your order!</div>\r\n                    <p>Please wait 5 to 10 business days for your items to arrived.</p>\r\n                    <Button type=\"primary\" onClick={this.handleShopMoreClick} >Shop More</Button>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomerInformation;","import React from 'react';\r\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CheckoutPageProduct } from '../../components/CheckoutPageProduct';\r\nimport CustomerInformation from '../../components/CustomerInformation';\r\nimport { ROUTE } from '../../constants/route';\r\nimport UserAction from '../../store/actions/userAction';\r\nimport { StoreStateType } from '../../store/rootReducer';\r\nimport { getSubtotalPrice } from '../../utils/product';\r\nimport { CheckoutPageDispatchProps, CheckoutPageOwnProps, CheckoutPageProps, CheckoutPageStateProps } from './interface';\r\nimport './style.css';\r\n\r\nclass CheckoutPage extends React.Component<CheckoutPageProps> {\r\n    getCartDetails = () => {\r\n        const { cart } = this.props;\r\n\r\n        const cartItems: React.ReactNode[] = [];\r\n        let totalPrice = 0;\r\n\r\n        cart.forEach((product, index) => {\r\n            if(index > 0) cartItems.push(<div key={`divider-${index}`} className=\"divider\" />)\r\n\r\n            cartItems.push(<CheckoutPageProduct product={product} key={`${product.productId}-${product.variantId}`} />);\r\n\r\n            totalPrice += getSubtotalPrice(product);\r\n        });\r\n\r\n        return {\r\n            cartItems,\r\n            totalPrice\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { cart, cleanCart, history } = this.props;\r\n        const { cartItems, totalPrice } = this.getCartDetails();\r\n\r\n        return cart.length ? (\r\n            <div className=\"checkout-page-container\">\r\n                <div className=\"cart-items-container\">\r\n                    <div className=\"cart-items-header\">\r\n                        <p>Items: {cart.length}</p>\r\n                        <div className=\"shipping-container\">\r\n                            <i className=\"fa fa-truck\" aria-hidden=\"true\"></i>\r\n                            <label>Free Shipping</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"cart-items\">\r\n                        {cartItems}\r\n                    </div>\r\n                    <div className=\"cart-items-footer\">\r\n                        <div className=\"text\">Total</div>\r\n                        <div className=\"total-price\">${totalPrice}</div>\r\n                    </div>\r\n                </div>\r\n                <CustomerInformation history={history} cart={cart} cleanCart={cleanCart} />\r\n            </div>\r\n        ) : <Redirect to={ROUTE.HOME} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<CheckoutPageStateProps, CheckoutPageOwnProps, StoreStateType> = (state) => {\r\n    const { cart } = state.user;\r\n\r\n    return {\r\n        cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsFunction<CheckoutPageDispatchProps, CheckoutPageOwnProps> = (dispatch) => {\r\n    const { cleanCart } = new UserAction();\r\n\r\n    return {\r\n        cleanCart: () => dispatch(cleanCart()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);","import React from 'react';\r\nimport { ModalProps } from './interface';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\n\r\nexport class Modal extends React.Component<ModalProps> {\r\n    root: HTMLDivElement;\r\n    el: HTMLDivElement;\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.root = document.querySelector(\"#root\") as HTMLDivElement;\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.root.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    removeOnClickPropagation = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onClickOutsideModalBody = () => {\r\n        const { onClickOutsideModalBody } = this.props;\r\n\r\n        onClickOutsideModalBody && onClickOutsideModalBody();\r\n    }\r\n\r\n    render() {\r\n        const { show = true, modalBodyClassName } = this.props;\r\n        return show ? ReactDOM.createPortal(\r\n            <div onClick={this.removeOnClickPropagation} className=\"modal-container\">\r\n                <div onClick={this.onClickOutsideModalBody} className=\"modal-overlay\" />\r\n                <div className={`modal-body ${modalBodyClassName || ''}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>,\r\n            this.el\r\n        ) : null;\r\n    }\r\n}"],"sourceRoot":""}