{"version":3,"sources":["store/actions/shopAction.ts","constants/route.ts","store/actions/userAction.ts","utils/helper.ts","api/shopAPI.ts","utils/product.ts","ui-components/Button/index.tsx","context/ThemeContext/index.tsx","components/ShoppingCartProduct/index.tsx","ui-components/Popover/index.tsx","containers/ShoppingCart/index.tsx","components/HeaderNavigation/index.tsx","store/reducers/shopReducer.ts","store/reducers/userReducer.ts","store/rootReducer.ts","store/sagas/shopSaga.ts","store/sagas/userSaga.ts","store/rootSaga.ts","containers/ErrorPage/index.tsx","components/HandleAllError/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ShopAction","fetchShopProducts","options","type","FETCH_SHOP_PRODUCTS","setShopProducts","shopProducts","SET_SHOP_PRODUCTS","fetchAllBestSellerProducts","FETCH_ALL_BEST_SELLER_PRODUCTS","setBestSellerProducts","bestSellerProducts","SET_BEST_SELLER_PRODUCTS","fetchShopProductsAndFilters","FETCH_SHOP_PRODUCTS_AND_FILTERS","setShopProductsAndFilters","productFilters","SET_SHOP_PRODUCTS_AND_FILTERS","ROUTE","HOME","CHECKOUT","ALL_PRODUCTS","ERROR","UserAction","updateUserFilters","filters","UPDATE_USER_FILTERS","updateUserShopProductsPage","shopProductsPage","UPDATE_USER_SHOP_PRODUCTS_PAGE","addToCart","productPurchase","ADD_TO_CART","removeToCart","REMOVE_TO_CART","cleanCart","CLEAN_CART","upperCaseFirstLetter","str","toUpperCase","substr","toLowerCase","convertFiltersToCategories","categories","Object","keys","forEach","filterCategory","categoryFilters","length","concat","omit","obj","keysToOmit","newObj","key","includes","ShopAPI","getProducts","page","size","category","pageQueryParam","sizeQueryParam","categoryQueryParam","join","axios","get","getProductFilters","postOrder","order","body","post","getProductVariantDetails","product","initialVariant","foundInitialVariant","variants","variantsOptionsAvailable","variant","completeDetails","productId","id","variantId","stock","variantSizeData","color","push","parsePrice","price","parseFloat","replace","getDiscountedPrice","discount","currentPrice","getSubtotalPrice","quantity","getBackgroundColorStyleForButton","arrayColors","split","backgroundImage","backgroundColor","Button","children","selected","onClick","className","style","disabled","selectedClass","disabledClass","ThemeContext","React","createContext","ThemeContextProvider","props","root","el","handleChangeTheme","setState","theme","state","document","querySelector","createElement","this","appendChild","removeChild","isLightTheme","iconClassName","themeButton","ReactDOM","createPortal","aria-hidden","Provider","value","Component","ShoppingCartProduct","title","image","subtotalPrice","Popover","childrenRef","popperRef","renderChildElement","cloneElement","ref","handleContentClick","getShowValue","controlShow","show","undefined","renderPopover","content","position","popoverBodyClassName","childrenPosition","contentWidth","top","bottom","left","right","createRef","setTimeout","childrenElement","current","getBoundingClientRect","prevProps","prevState","popperWidth","width","Fragment","ShoppingCart","handlePopoverClick","cart","showPopover","handleRemoveToCart","getAllProducts","map","cartLength","notificationUI","popoverContent","to","component","navigate","connect","user","dispatch","HeaderNavigation","shopInitialState","products","productsCount","totalPages","gender","trends","userInitialState","shopProductsSize","rootReducer","combineReducers","shop","action","update","$set","$push","newCart","filter","workerFetchShopProductsSaga","workerFetchBestSellerProductsSaga","workerFetchShopProductsAndFilterSaga","watchShopSaga","shopAPI","shopAction","call","response","data","put","console","log","select","productsResponse","productFiltersResponse","takeLatest","workerUpdateUserFiltersSaga","workerUpdateUserShopProductsPageSaga","watchUserSaga","userAction","newUserPage","startRootSaga","all","ErrorPage","HandleAllError","history","withRouter","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","window","shopspree","HomePage","lazy","AllProductsPage","CheckoutPage","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2fb095e9.chunk.js","sourcesContent":["import { GetProducsOptions } from \"../../api/shopAPI\";\r\nimport { Product, Shop, ProductFilters, ShopProducts } from \"../reducers/shopReducer\";\r\n\r\nexport type ShopReducerAction = SetShopProductsAction | FetchShopProductsAction | SetBestSellerProductsAction | FetchBestSellerProductsAction\r\n    | FetchShopProductsAndFilterAction | SetShopProductsAndFilterAction;\r\n\r\nexport interface SetShopProductsAction {\r\n    type: typeof ShopAction.SET_SHOP_PRODUCTS;\r\n    shopProducts: ShopProducts;\r\n}\r\n\r\nexport interface FetchShopProductsAction {\r\n    type: typeof ShopAction.FETCH_SHOP_PRODUCTS;\r\n    options: GetProducsOptions;\r\n}\r\n\r\nexport interface SetBestSellerProductsAction {\r\n    type: typeof ShopAction.SET_BEST_SELLER_PRODUCTS;\r\n    bestSellerProducts: Product[];\r\n}\r\n\r\nexport interface FetchBestSellerProductsAction {\r\n    type: typeof ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS;\r\n}\r\n\r\nexport interface FetchShopProductsAndFilterAction {\r\n    type: typeof ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS;\r\n}\r\n\r\nexport interface SetShopProductsAndFilterAction {\r\n    type: typeof ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS;\r\n    shopProducts: ShopProducts;\r\n    productFilters: ProductFilters;\r\n}\r\n\r\nclass ShopAction {\r\n    static readonly FETCH_SHOP_PRODUCTS_AND_FILTERS = 'FETCH_SHOP_PRODUCTS_AND_FILTERS';\r\n    static readonly SET_SHOP_PRODUCTS_AND_FILTERS = 'SET_SHOP_PRODUCTS_AND_FILTERS';\r\n    static readonly FETCH_SHOP_PRODUCTS = 'FETCH_SHOP_PRODUCTS';\r\n    static readonly SET_SHOP_PRODUCTS = 'SET_SHOP_PRODUCTS';\r\n    static readonly FETCH_ALL_BEST_SELLER_PRODUCTS = 'FETCH_ALL_BEST_SELLER_PRODUCTS';\r\n    static readonly SET_BEST_SELLER_PRODUCTS = 'SET_BEST_SELLER_PRODUCTS';\r\n\r\n    fetchShopProducts = (options: GetProducsOptions): FetchShopProductsAction => {\r\n        return {\r\n            type: ShopAction.FETCH_SHOP_PRODUCTS,\r\n            options,\r\n        }\r\n    }\r\n\r\n    setShopProducts = (shopProducts: ShopProducts): SetShopProductsAction => {\r\n        return {\r\n            type: ShopAction.SET_SHOP_PRODUCTS,\r\n            shopProducts\r\n        }\r\n    }\r\n\r\n    fetchAllBestSellerProducts = (): FetchBestSellerProductsAction => {\r\n        return {\r\n            type: ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS\r\n        }\r\n    }\r\n\r\n    setBestSellerProducts = (bestSellerProducts: Product[]): SetBestSellerProductsAction => {\r\n        return {\r\n            type: ShopAction.SET_BEST_SELLER_PRODUCTS,\r\n            bestSellerProducts\r\n        }\r\n    }\r\n\r\n    fetchShopProductsAndFilters = (): FetchShopProductsAndFilterAction => {\r\n        return {\r\n            type: ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS,\r\n        }\r\n    }\r\n\r\n    setShopProductsAndFilters = (shopProducts: ShopProducts, productFilters: ProductFilters): SetShopProductsAndFilterAction => {\r\n        return {\r\n            type: ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS,\r\n            shopProducts,\r\n            productFilters,\r\n        }\r\n    }\r\n}\r\n\r\nexport default ShopAction","export const ROUTE = {\r\n    HOME: '/',\r\n    CHECKOUT: '/checkout',\r\n    ALL_PRODUCTS: '/allproducts',\r\n    ERROR: '/error'\r\n}","import { ProductFilters } from \"../reducers/shopReducer\";\r\nimport { ProductPurchase } from \"../reducers/userReducer\";\r\n\r\nexport type UserReducerAction = UpdateUserFiltersAction | UpdateUserShopProductsPageAction | AddToCartAction | RemoveToCartAction | CleanCartAction;\r\n\r\nexport interface UpdateUserFiltersAction {\r\n    type: typeof UserAction.UPDATE_USER_FILTERS;\r\n    filters: ProductFilters\r\n}\r\n\r\nexport interface UpdateUserShopProductsPageAction {\r\n    type: typeof UserAction.UPDATE_USER_SHOP_PRODUCTS_PAGE;\r\n    shopProductsPage: number;\r\n}\r\n\r\nexport interface AddToCartAction {\r\n    type: typeof UserAction.ADD_TO_CART;\r\n    productPurchase: ProductPurchase;\r\n}\r\n\r\nexport interface RemoveToCartAction {\r\n    type: typeof UserAction.REMOVE_TO_CART;\r\n    productPurchase: ProductPurchase;\r\n}\r\n\r\nexport interface CleanCartAction {\r\n    type: typeof UserAction.CLEAN_CART;\r\n}\r\n\r\nclass UserAction {\r\n    static readonly UPDATE_USER_FILTERS = 'UPDATE_USER_FILTERS';\r\n    static readonly UPDATE_USER_SHOP_PRODUCTS_PAGE = 'UPDATE_USER_SHOP_PRODUCTS_PAGE';\r\n    static readonly ADD_TO_CART = 'ADD_TO_CART';\r\n    static readonly REMOVE_TO_CART = 'REMOVE_TO_CART';\r\n    static readonly CLEAN_CART = 'CLEAN_CART';\r\n\r\n    updateUserFilters = (filters: ProductFilters): UpdateUserFiltersAction => {\r\n        return {\r\n            type: UserAction.UPDATE_USER_FILTERS,\r\n            filters\r\n        }\r\n    }\r\n\r\n    updateUserShopProductsPage = (shopProductsPage: number): UpdateUserShopProductsPageAction => {\r\n        return {\r\n            type: UserAction.UPDATE_USER_SHOP_PRODUCTS_PAGE,\r\n            shopProductsPage\r\n        }\r\n    }\r\n\r\n    addToCart = (productPurchase: ProductPurchase): AddToCartAction => {\r\n        return {\r\n            type: UserAction.ADD_TO_CART,\r\n            productPurchase,\r\n        }\r\n    }\r\n\r\n    removeToCart = (productPurchase: ProductPurchase): RemoveToCartAction => {\r\n        return {\r\n            type: UserAction.REMOVE_TO_CART,\r\n            productPurchase,\r\n        }\r\n    }\r\n\r\n    cleanCart = (): CleanCartAction => {\r\n        return {\r\n            type: UserAction.CLEAN_CART\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default UserAction;","import { ProductFilters } from \"../store/reducers/shopReducer\";\r\n\r\nexport const upperCaseFirstLetter = (str: string) => str[0].toUpperCase() + str.substr(1).toLowerCase();\r\n\r\nexport const convertFiltersToCategories = (filters: ProductFilters) => {\r\n    let categories: string[] = [];\r\n\r\n    Object.keys(filters).forEach(filterCategory => {\r\n        const categoryFilters = filters[filterCategory as keyof ProductFilters];\r\n        if(categoryFilters.length) categories = categories.concat(categoryFilters);\r\n    });\r\n\r\n    return categories;\r\n}\r\n\r\nexport const omit = (obj: any, keysToOmit: string[]) => {\r\n    const newObj:any = {};\r\n\r\n    Object.keys(obj).forEach(key => {\r\n        if(!keysToOmit.includes(key)) newObj[key] = obj[key];\r\n    });\r\n\r\n    return newObj;\r\n}","import axios from \"axios\";\r\nimport { CustomerInformationFieldsList } from \"../constants/user\";\r\nimport { ProductFilters } from \"../store/reducers/shopReducer\";\r\nimport { ProductPurchase } from \"../store/reducers/userReducer\";\r\n\r\nexport interface GetProducsOptions {\r\n    page?: number;\r\n    size?: number;\r\n    category?: string[];\r\n}\r\n\r\nexport interface ProductFiltersAPIResponse {\r\n    productFilters: ProductFilters;\r\n}\r\n\r\nexport interface Order {\r\n    cart: ProductPurchase[];\r\n    user: CustomerInformationFieldsList;\r\n}\r\n\r\nclass ShopAPI {\r\n    getProducts = (options: GetProducsOptions) => {\r\n        const { page, size, category } = options;\r\n        const pageQueryParam = `page=${page || ''}`;\r\n        const sizeQueryParam = `&size=${size || ''}`;\r\n        const categoryQueryParam = `&category=${category ? category.join('&category='): ''}`;\r\n        return axios.get(`http://localhost:1234/product/all?${pageQueryParam}${sizeQueryParam}${categoryQueryParam}`);\r\n    }\r\n\r\n    getProductFilters = () => {\r\n        return axios.get('http://localhost:1234/product/filters');\r\n    }\r\n\r\n    postOrder = (order: Order) => {\r\n        const body = {\r\n            order\r\n        };\r\n\r\n        return axios.post('http://localhost:1234/order', body);\r\n    }\r\n}\r\n\r\nexport default ShopAPI;","import { Product, ProductVariantCompleteDetails } from \"../store/reducers/shopReducer\";\r\nimport { ProductPurchase } from \"../store/reducers/userReducer\";\r\nimport { omit } from \"./helper\";\r\n\r\nexport type InitialVariant = ProductVariantCompleteDetails | null;\r\n\r\nexport interface VariantsOptionsAvailable {\r\n    [sizes: string] : string[];\r\n}\r\n\r\nexport interface GetProductVariantDetails {\r\n    initialVariant: InitialVariant;\r\n    variants: ProductVariantCompleteDetails[];\r\n    variantsOptionsAvailable: VariantsOptionsAvailable;\r\n}\r\n\r\nexport const getProductVariantDetails = (product: Product): GetProductVariantDetails => {\r\n    let initialVariant: InitialVariant = null;\r\n    let foundInitialVariant = false;\r\n    const variants: ProductVariantCompleteDetails[] = [];\r\n    const variantsOptionsAvailable: VariantsOptionsAvailable = {};\r\n\r\n    product.variants.forEach(variant => {\r\n        const completeDetails: ProductVariantCompleteDetails = {\r\n            ...omit(variant, ['id']),\r\n            ...omit(product, ['id', 'variants']),\r\n            productId: product.id,\r\n            variantId: variant.id\r\n        }\r\n\r\n        if(!foundInitialVariant && variant.stock) {\r\n            foundInitialVariant = true;\r\n            initialVariant = completeDetails;\r\n        }\r\n\r\n        if(variant.stock) {\r\n            const variantSizeData = variantsOptionsAvailable[variant.size];\r\n            if(variantSizeData && !variantSizeData.includes(variant.color)) {\r\n                variantSizeData.push(variant.color);\r\n            } else if (!variantSizeData) {\r\n                variantsOptionsAvailable[variant.size] = [ variant.color ];\r\n            }\r\n        }\r\n\r\n        variants.push(completeDetails);\r\n    });\r\n\r\n    return {\r\n        initialVariant,\r\n        variants,\r\n        variantsOptionsAvailable\r\n    }\r\n}\r\n\r\nexport const parsePrice = (price: string) => {\r\n    return parseFloat(price.replace('$', ''));\r\n}\r\n\r\nexport const getDiscountedPrice = (price: string, discount: string) => {\r\n    const currentPrice = parsePrice(price);\r\n    let discountedPrice: number;\r\n\r\n    if(discount.includes('$')) {\r\n        discountedPrice = currentPrice - parsePrice(discount);\r\n    } else {\r\n        discountedPrice = currentPrice - (currentPrice * (parseFloat(discount)/100));\r\n    }\r\n\r\n    return discountedPrice;\r\n}\r\n\r\nexport const getSubtotalPrice = (product: ProductPurchase) => {\r\n    const { discount, price, quantity } = product;\r\n\r\n    const currentPrice = discount ? getDiscountedPrice(price, discount) : parsePrice(price);\r\n\r\n    return currentPrice * quantity;\r\n}\r\n\r\nexport const getBackgroundColorStyleForButton = (color: string): React.CSSProperties => {\r\n    const arrayColors = color.split('&');\r\n\r\n    return arrayColors.length > 1\r\n        ? { backgroundImage: `linear-gradient(${arrayColors.join(',')})` }\r\n        : { backgroundColor: color }\r\n}","import React from 'react';\r\nimport { ButtonProps } from './interface';\r\nimport './style.css';\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ children, type=\"default\", selected, onClick, className, style, disabled }) => {\r\n    const selectedClass = selected ? 'selected' : '';\r\n    const disabledClass = disabled ? 'disabled' : '';\r\n\r\n    return (\r\n        <button\r\n            style={style}\r\n            onClick={onClick}\r\n            className={`btn btn-${type} ${selectedClass} ${disabledClass} ${className || ''} `}\r\n            disabled={disabled}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { upperCaseFirstLetter } from '../../utils/helper';\r\nimport './style.css';\r\n\r\nexport type ThemeContextValue = 'light' | 'dark';\r\n\r\nexport const ThemeContext = React.createContext<ThemeContextValue>('light');\r\n\r\ninterface ThemeContextProviderState {\r\n    theme: ThemeContextValue;\r\n}\r\n\r\nclass ThemeContextProvider extends React.Component<{}, ThemeContextProviderState> {\r\n    root: HTMLDivElement;\r\n    el: HTMLDivElement;\r\n    body: HTMLBodyElement;\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            theme: 'light'\r\n        }\r\n\r\n        this.root = document.querySelector(\"#root\") as HTMLDivElement;\r\n        this.el = document.createElement('div');\r\n        this.body = document.querySelector(\"body\") as HTMLBodyElement;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.root.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    handleChangeTheme = () => {\r\n        this.setState({\r\n            theme: this.state.theme === 'light' ? 'dark' : 'light'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { theme } = this.state;\r\n        const isLightTheme = theme === 'light';\r\n        this.body.style.backgroundColor = isLightTheme ? 'white' : 'black';\r\n        const iconClassName = isLightTheme ? 'fa-sun-o' : 'fa-moon-o';\r\n        const themeButton = ReactDOM.createPortal(\r\n            <i\r\n                onClick={this.handleChangeTheme}\r\n                className={`fa ${iconClassName} theme-context-button ${theme}`}\r\n                aria-hidden=\"true\"\r\n            />,\r\n            this.el\r\n        )\r\n\r\n        return (\r\n            <ThemeContext.Provider value={theme}>\r\n                <div className={`app-container ${theme}`}>\r\n                    {this.props.children}\r\n                </div>\r\n                {themeButton}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeContextProvider;","import React from 'react';\r\nimport { upperCaseFirstLetter } from '../../utils/helper';\r\nimport { getDiscountedPrice, getSubtotalPrice, parsePrice } from '../../utils/product';\r\nimport { ShoppingCartProductProps } from './interface';\r\nimport './style.css';\r\n\r\nexport const ShoppingCartProduct: React.FC<ShoppingCartProductProps> = ({ product, removeToCart }) => {\r\n    const { title, image, size, color, quantity } = product;\r\n\r\n    const subtotalPrice = getSubtotalPrice(product);\r\n\r\n    const handleOnClickCloseButton = () => {\r\n        removeToCart(product);\r\n    }\r\n\r\n    return (\r\n        <div className=\"shopping-cart-product-container\">\r\n            <div className=\"image-container\">\r\n                <div style={{ backgroundImage: `url(${image})` }} className=\"product-image\" />\r\n            </div>\r\n            <div className=\"product-details\">\r\n                <p className=\"product-name\">{title}</p>\r\n                <p>{size}</p>\r\n                <p>{upperCaseFirstLetter(color)}</p>\r\n                <p>QTY: {quantity}</p>\r\n                <p className=\"sub-total\">Subtotal: ${subtotalPrice}</p>\r\n            </div>\r\n            <div onClick={handleOnClickCloseButton} className=\"close-button\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PopoverProps, PopoverState } from './interface';\r\nimport './style.css';\r\n\r\nclass Popover extends React.Component<PopoverProps, PopoverState> {\r\n    root: HTMLDivElement;\r\n    el: HTMLDivElement;\r\n    childrenRef: React.RefObject<HTMLElement>;\r\n    popperRef: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: PopoverProps) {\r\n        super(props);\r\n\r\n        this.root = document.querySelector('#root') as HTMLDivElement;\r\n        this.el = document.createElement('div');\r\n        this.childrenRef = React.createRef();\r\n        this.popperRef = React.createRef();\r\n\r\n        this.state = {\r\n            show: false,\r\n            childrenPosition: {\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n            },\r\n            contentWidth: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.root.appendChild(this.el);\r\n\r\n        setTimeout(() => {\r\n            const childrenElement = this.childrenRef.current;\r\n\r\n            if(childrenElement) {\r\n                const { top, left, right, bottom } = childrenElement.getBoundingClientRect();\r\n\r\n                this.setState({\r\n                    childrenPosition: {\r\n                        top,\r\n                        left,\r\n                        bottom,\r\n                        right,\r\n                    }\r\n                })\r\n            }\r\n        }, 500)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    renderChildElement = () => {\r\n        return React.cloneElement(this.props.children as React.ReactElement, { ref: this.childrenRef, onClick: this.handleContentClick });\r\n    }\r\n\r\n    getShowValue = () => {\r\n        const { controlShow } = this.props;\r\n        const { show } = this.state;\r\n        \r\n        return controlShow === undefined ? show : controlShow;\r\n    }\r\n\r\n    handleContentClick = () => {\r\n        const { controlShow, onClick } = this.props;\r\n        controlShow === undefined && this.setState({ show: !this.state.show });\r\n        \r\n        onClick && onClick();\r\n    }\r\n\r\n    renderPopover = () => {\r\n        const { content, position, popoverBodyClassName } = this.props;\r\n        const { childrenPosition, contentWidth } = this.state;\r\n        let style: React.CSSProperties;\r\n\r\n        switch(position) {\r\n            case 'bottomleft':\r\n                style = {\r\n                    top: childrenPosition.bottom,\r\n                    left: childrenPosition.right - contentWidth\r\n                };\r\n                break;\r\n            case 'bottomright':\r\n                style = {\r\n                    top: childrenPosition.bottom,\r\n                    left: childrenPosition.left\r\n                };\r\n                break;\r\n        }\r\n\r\n        return this.getShowValue() ? ReactDOM.createPortal(\r\n            <div\r\n                style={style}\r\n                className=\"popover-content-container\"\r\n                ref={this.popperRef}\r\n            >\r\n                <div className={`popover-body ${popoverBodyClassName || ''}`}>\r\n                    {content}\r\n                </div>\r\n            </div>,\r\n            this.el\r\n        ) : null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PopoverProps, prevState: PopoverState) {\r\n        const { contentWidth } = this.state;\r\n        const popperWidth = this.popperRef.current ?\r\n            this.popperRef.current.getBoundingClientRect().width : 0;\r\n\r\n        if((!contentWidth || popperWidth !== contentWidth) && this.getShowValue()) {\r\n            this.setState({\r\n                contentWidth: popperWidth\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderChildElement()}\r\n                {this.renderPopover()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popover;","import React from 'react';\r\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ShoppingCartProduct } from '../../components/ShoppingCartProduct';\r\nimport { ROUTE } from '../../constants/route';\r\nimport UserAction from '../../store/actions/userAction';\r\nimport { ProductPurchase } from '../../store/reducers/userReducer';\r\nimport { StoreStateType } from '../../store/rootReducer';\r\nimport { Button } from '../../ui-components/Button';\r\nimport Popover from '../../ui-components/Popover';\r\nimport { ShoppingCartDispatchProps, ShoppingCartOwnProps, ShoppingCartProps, ShoppingCartState, ShoppingCartStateProps } from './interface';\r\nimport './style.css';\r\n\r\nclass ShoppingCart extends React.Component<ShoppingCartProps, ShoppingCartState> {\r\n    constructor(props: ShoppingCartProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showPopover: false,\r\n        }\r\n    }\r\n\r\n    handlePopoverClick = () => {\r\n        const { cart } = this.props;\r\n        cart.length && this.setState({ showPopover: !this.state.showPopover });\r\n    }\r\n\r\n    handleRemoveToCart = (product: ProductPurchase) => {\r\n        const { cart } = this.props;\r\n        cart.length === 1 && this.setState({ showPopover: false })\r\n        this.props.removeToCart(product);\r\n    }\r\n\r\n    getAllProducts = () => {\r\n        const { cart, removeToCart } = this.props;\r\n        return cart.map(product => (\r\n            <ShoppingCartProduct\r\n                key={`${product.productId}-${product.variantId}`}\r\n                product={product}\r\n                removeToCart={this.handleRemoveToCart}\r\n            />) );\r\n    }\r\n\r\n    render() {\r\n        const { cart } = this.props;\r\n        const { showPopover } = this.state;\r\n        const cartLength = cart.length;\r\n\r\n        const notificationUI = cartLength ? (\r\n            <div className=\"shop-cart-notification\">{cartLength}</div>\r\n        ): null;\r\n\r\n        const popoverContent = (\r\n            <div className=\"shopping-cart-container-popover\">\r\n                <div className=\"shopping-cart-all-products\">{this.getAllProducts()}</div>\r\n                <Link to={ROUTE.CHECKOUT} component={({ navigate }) => (\r\n                    <Button\r\n                        className=\"checkout-button\"\r\n                        type=\"primary\"\r\n                        onClick={() => {\r\n                            navigate();\r\n                            this.handlePopoverClick();\r\n                        }}\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                )} />\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <Popover controlShow={showPopover} onClick={this.handlePopoverClick} position=\"bottomleft\" content={popoverContent}>\r\n                <div className=\"shopping-cart-container\">\r\n                    <i className=\"nav-item fa fa-shopping-cart\"></i>\r\n                    {notificationUI}\r\n                </div>\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<ShoppingCartStateProps, ShoppingCartOwnProps, StoreStateType> = (state) => {\r\n    const { cart } = state.user;\r\n    \r\n    return {\r\n        cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsFunction<ShoppingCartDispatchProps, ShoppingCartOwnProps> = (dispatch) => {\r\n    const { removeToCart } = new UserAction();\r\n\r\n    return {\r\n        removeToCart: (productPurchase) => dispatch(removeToCart(productPurchase))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROUTE } from '../../constants/route';\r\nimport ShoppingCart from '../../containers/ShoppingCart';\r\nimport './style.css';\r\n\r\nexport const HeaderNavigation: React.FC = () => {\r\n    return (\r\n        <div className=\"header-nav-container\">\r\n            <div className=\"nav-items-left\">\r\n                <Link className=\"nav-item shopname\" to={ROUTE.HOME}>Shopspree</Link>\r\n                <Link className=\"nav-item\" to={ROUTE.ALL_PRODUCTS}>All Products</Link>\r\n            </div>\r\n            <div className=\"nav-items-right\">\r\n                <ShoppingCart />\r\n            </div>\r\n        </div>\r\n    )\r\n};","import { AnyAction, Reducer } from \"redux\";\r\nimport ShopAction, { ShopReducerAction } from \"../actions/shopAction\";\r\nimport update from 'immutability-helper';\r\n\r\nexport type ProductVariantCompleteDetails = Omit<ProductVariant, 'id'> & Omit<Product, 'id' | 'variants'> & {\r\n    productId: string;\r\n    variantId: string;\r\n}\r\n\r\nexport interface ProductVariant {\r\n    id: string;\r\n    size: string;\r\n    color: string;\r\n    price: string;\r\n    stock: number;\r\n    discount?: string;\r\n    image: string;\r\n}\r\n\r\nexport interface Product {\r\n    id: string;\r\n    category: string[];\r\n    title: string;\r\n    variants: ProductVariant[];\r\n}\r\n\r\nexport interface ShopProducts {\r\n    products: Product[];\r\n    page?: number;\r\n    nextPage?: boolean;\r\n    productsCount: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport interface ProductFilters {\r\n    gender: string[];\r\n    category: string[];\r\n    trends: string[];\r\n}\r\n\r\nexport interface Shop {\r\n    shopProducts: ShopProducts;\r\n    bestSellerProducts: Product[];\r\n    productFilters: ProductFilters;\r\n}\r\n\r\nconst shopInitialState: Shop = {\r\n    shopProducts: {\r\n        products: [],\r\n        productsCount: 0,\r\n        totalPages: 1\r\n    },\r\n    productFilters: {\r\n        gender: [],\r\n        category: [],\r\n        trends: [],\r\n    },\r\n    bestSellerProducts: []\r\n}\r\n\r\nexport const shopReducer: Reducer<Shop, ShopReducerAction> = (state = shopInitialState, action) => {\r\n    switch(action.type) {\r\n        case ShopAction.SET_SHOP_PRODUCTS_AND_FILTERS:\r\n            return update(state, { \r\n                shopProducts: { $set: action.shopProducts },\r\n                productFilters: { $set: action.productFilters }\r\n            })\r\n        case ShopAction.SET_BEST_SELLER_PRODUCTS:\r\n            return update(state, { bestSellerProducts: { $set: action.bestSellerProducts } })\r\n        case ShopAction.SET_SHOP_PRODUCTS:\r\n            return update(state, { shopProducts: { $set: action.shopProducts } })\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Reducer } from \"redux\";\r\nimport UserAction, { UserReducerAction } from \"../actions/userAction\";\r\nimport { ProductFilters, ProductVariantCompleteDetails } from \"./shopReducer\";\r\nimport update from 'immutability-helper';\r\n\r\nexport interface ProductPurchase extends ProductVariantCompleteDetails {\r\n    quantity: number;\r\n}\r\n\r\nexport interface User {\r\n    filters: ProductFilters;\r\n    shopProductsPage: number;\r\n    shopProductsSize: number;\r\n    cart: ProductPurchase[];\r\n}\r\n\r\nconst userInitialState: User = {\r\n    filters: {\r\n        gender: [],\r\n        category: [],\r\n        trends: []\r\n    },\r\n    shopProductsPage: 1,\r\n    shopProductsSize: 2,\r\n    cart: [],\r\n}\r\n\r\nexport const userReducer: Reducer<User, UserReducerAction> = (state = userInitialState, action) => {\r\n    switch(action.type) {\r\n        case UserAction.UPDATE_USER_FILTERS:\r\n            return update(state, { filters: { $set: action.filters } });\r\n        case UserAction.UPDATE_USER_SHOP_PRODUCTS_PAGE:\r\n            return update(state, { shopProductsPage: { $set: action.shopProductsPage } });\r\n        case UserAction.ADD_TO_CART:\r\n            return update(state, { cart: { $push: [ action.productPurchase ] } });\r\n        case UserAction.REMOVE_TO_CART:\r\n            const { productId, variantId } = action.productPurchase;\r\n            const newCart = state.cart.filter(product => product.productId !== productId && product.variantId !== variantId);\r\n\r\n            return update(state, { cart: { $set: newCart } });\r\n        case UserAction.CLEAN_CART:\r\n            return update(state, { cart: { $set: [] } });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { shopReducer } from \"./reducers/shopReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    shop: shopReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport type StoreStateType = ReturnType<typeof rootReducer>","import { call, put, select, takeLatest } from 'redux-saga/effects'\r\nimport ShopAPI, { GetProducsOptions, ProductFiltersAPIResponse } from '../../api/shopAPI';\r\nimport { convertFiltersToCategories } from '../../utils/helper';\r\nimport ShopAction, { FetchShopProductsAction } from '../actions/shopAction'\r\nimport { Shop, ShopProducts } from '../reducers/shopReducer';\r\nimport { User } from '../reducers/userReducer';\r\nimport { StoreStateType } from '../rootReducer';\r\n\r\nfunction* workerFetchShopProductsSaga(action: FetchShopProductsAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const response = yield call(shopAPI.getProducts, action.options);\r\n        const shopProducts = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setShopProducts(shopProducts));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log('err');\r\n    }\r\n}\r\n\r\nfunction* workerFetchBestSellerProductsSaga() {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const response = yield call(shopAPI.getProducts, { category: ['best seller'] } );\r\n        const { products } = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setBestSellerProducts(products));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* workerFetchShopProductsAndFilterSaga(action: FetchShopProductsAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const user: User = yield select((state: StoreStateType) => state.user);\r\n\r\n        const options: GetProducsOptions = {\r\n            page: user.shopProductsPage,\r\n            size: user.shopProductsSize,\r\n        };\r\n\r\n        const productsResponse = yield call(shopAPI.getProducts, options);\r\n        const productFiltersResponse = yield call(shopAPI.getProductFilters);\r\n\r\n        const shopProducts = productsResponse.data as ShopProducts;\r\n        const { productFilters } = productFiltersResponse.data as ProductFiltersAPIResponse;\r\n\r\n        yield put(shopAction.setShopProductsAndFilters(shopProducts, productFilters));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* watchShopSaga() {\r\n    yield takeLatest(ShopAction.FETCH_SHOP_PRODUCTS, workerFetchShopProductsSaga);\r\n    yield takeLatest(ShopAction.FETCH_ALL_BEST_SELLER_PRODUCTS, workerFetchBestSellerProductsSaga);\r\n    yield takeLatest(ShopAction.FETCH_SHOP_PRODUCTS_AND_FILTERS, workerFetchShopProductsAndFilterSaga)\r\n}","import { call, put, select, takeLatest } from \"redux-saga/effects\";\r\nimport ShopAPI, { GetProducsOptions } from \"../../api/shopAPI\";\r\nimport { convertFiltersToCategories } from \"../../utils/helper\";\r\nimport ShopAction from \"../actions/shopAction\";\r\nimport UserAction, { UpdateUserFiltersAction, UpdateUserShopProductsPageAction } from \"../actions/userAction\";\r\nimport { ShopProducts } from \"../reducers/shopReducer\";\r\nimport { User } from \"../reducers/userReducer\";\r\nimport { StoreStateType } from \"../rootReducer\";\r\n\r\nfunction* workerUpdateUserFiltersSaga(action: UpdateUserFiltersAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n    const userAction = new UserAction();\r\n\r\n    try {\r\n        const user: User = yield select((state: StoreStateType) => state.user);\r\n        const newUserPage = 1;\r\n        const options: GetProducsOptions = {\r\n            page: newUserPage,\r\n            size: user.shopProductsSize,\r\n            category: convertFiltersToCategories(action.filters)\r\n        };\r\n\r\n        const response = yield call(shopAPI.getProducts, options );\r\n        const shopProducts = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setShopProducts(shopProducts));\r\n        yield put(userAction.updateUserShopProductsPage(newUserPage));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction* workerUpdateUserShopProductsPageSaga(action: UpdateUserShopProductsPageAction) {\r\n    const shopAPI = new ShopAPI();\r\n    const shopAction = new ShopAction();\r\n\r\n    try {\r\n        const user: User = yield select((state: StoreStateType) => state.user);\r\n\r\n        const options: GetProducsOptions = {\r\n            page: action.shopProductsPage,\r\n            size: user.shopProductsSize,\r\n            category: convertFiltersToCategories(user.filters)\r\n        };\r\n\r\n        const response = yield call(shopAPI.getProducts, options);\r\n        const shopProducts = response.data as ShopProducts;\r\n\r\n        yield put(shopAction.setShopProducts(shopProducts));\r\n    } catch (err) {\r\n        // TODO: Change in the future\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport function* watchUserSaga() {\r\n    yield takeLatest(UserAction.UPDATE_USER_FILTERS, workerUpdateUserFiltersSaga);\r\n    yield takeLatest(UserAction.UPDATE_USER_SHOP_PRODUCTS_PAGE, workerUpdateUserShopProductsPageSaga)\r\n}","import { all } from \"redux-saga/effects\";\r\nimport { watchShopSaga } from \"./sagas/shopSaga\";\r\nimport { watchUserSaga } from \"./sagas/userSaga\";\r\n\r\nexport default function* startRootSaga() {\r\n    yield all([\r\n        watchShopSaga(),\r\n        watchUserSaga()\r\n    ])\r\n}","import React from 'react';\r\n\r\nexport const ErrorPage: React.FC = () => {\r\n    return (\r\n        <h1>Our shop is experiencing some lag. Please try again later.</h1>\r\n    )\r\n}","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { ROUTE } from '../../constants/route';\r\n\r\nclass HandleAllError extends React.Component<RouteComponentProps> {\r\n    componentDidCatch() {\r\n        this.props.history.push(ROUTE.ERROR);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HandleAllError);","import React, { Suspense } from 'react';\r\nimport logo from './logo.svg';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { HeaderNavigation } from './components/HeaderNavigation';\r\nimport { ROUTE } from './constants/route';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { rootReducer } from './store/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport ShopAction from './store/actions/shopAction';\r\nimport startRootSaga from './store/rootSaga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ThemeContextProvider from './context/ThemeContext';\r\nimport { ErrorPage } from './containers/ErrorPage';\r\nimport HandleAllError from './components/HandleAllError';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(startRootSaga);\r\n\r\n(window as any).shopspree = store;\r\n\r\nconst HomePage = React.lazy(() => import('./containers/HomePage'));\r\nconst AllProductsPage = React.lazy(() => import('./containers/AllProductsPage'));\r\nconst CheckoutPage = React.lazy(() => import('./containers/CheckoutPage'));\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n          <ThemeContextProvider>\r\n            <HeaderNavigation />\r\n            <HandleAllError>\r\n              <Suspense fallback={null}>\r\n                <Switch>\r\n                  <Route exact component={CheckoutPage} path={ROUTE.CHECKOUT} />\r\n                  <Route exact component={AllProductsPage} path={ROUTE.ALL_PRODUCTS} />\r\n                  <Route exact component={ErrorPage} path={ROUTE.ERROR} />\r\n                  <Route exact component={HomePage} path={ROUTE.HOME} />\r\n                  <Redirect to=\"/\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </HandleAllError>\r\n          </ThemeContextProvider>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}