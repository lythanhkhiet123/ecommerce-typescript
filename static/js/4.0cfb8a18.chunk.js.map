{"version":3,"sources":["components/Partners/index.tsx","components/ShopQuality/index.tsx","containers/BestSeller/index.tsx","containers/HomePage/index.tsx","ui-components/Modal/index.tsx","components/ProductCardModalPriceUI/index.tsx","components/ProductCardModalQuantityUI/index.tsx","components/ProductCardModalVariantOptions/index.tsx","components/ProductCardModal/index.tsx","components/ProductCard/index.tsx"],"names":["Partners","className","ShopQuality","BestSeller","renderBestSellerProducts","props","bestSellerProducts","addToCart","map","product","ProductCard","id","this","length","fetchAllBestSellerProducts","React","Component","connect","state","shop","dispatch","ShopAction","UserAction","productPurchase","HomePage","Modal","root","el","removeOnClickPropagation","event","stopPropagation","onClickOutsideModalBody","document","querySelector","createElement","appendChild","removeChild","show","modalBodyClassName","ReactDOM","createPortal","onClick","children","ProductCardModalPriceUI","selectedVariant","discount","price","Fragment","getDiscountedPrice","ProductCardModalQuantityUI","quantity","onClickAdd","onClickMinus","ProductCardModalVariantOptions","variants","variantsOptionsAvailable","onColorChange","onSizeChange","renderVariantOptionsContainer","category","options","handleSizeChange","size","handleColorChange","color","sizesUI","colorsUI","processData","variantButtonClassName","forEach","includes","push","Button","selected","disabled","backgroundStyle","getBackgroundColorStyleForButton","style","ProductCardModal","handleClickQuantityAddButton","stock","setState","handleClickQuantityMinusButton","filter","variant","handleAddToCart","initialVariant","title","image","backgroundImage","type","onClickProductCard","showDetails","getProductVariantDetails","ThemeContext","Consumer","theme"],"mappings":"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","file":"static/js/4.0cfb8a18.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport const Partners: React.FC = () => {\r\n    return (\r\n        <div className=\"partners-container\">\r\n            <h2>Trusted By Our Partners</h2>\r\n            <div className=\"partners-list\">\r\n                <div className=\"partner-item amazon\"/>\r\n                <div className=\"partner-item shopify\"/>\r\n                <div className=\"partner-item wix\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\nexport const ShopQuality: React.FC = () => {\r\n    return (\r\n        <div className=\"shop-quality-container\">\r\n            <div className=\"quality-item-container\">\r\n                <div className=\"img-container support-local\" />\r\n                <h3> Support Local </h3>\r\n                <p>All materials come from local producers. Together we can create a stronger and better community.</p>\r\n            </div>\r\n            <div className=\"quality-item-container\">\r\n                <div className=\"img-container high-quality\" />\r\n                <h3> High Quality </h3>\r\n                <p>Materials used are high quality proves to last for many years.</p>\r\n            </div>\r\n            <div className=\"quality-item-container\">\r\n                <div className=\"img-container eco-friendly\" />\r\n                <h3> Eco Friendly </h3>\r\n                <p>Rest assured that the process and materials used will never harm our environment.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\r\nimport { ProductCard } from '../../components/ProductCard';\r\nimport ShopAction from '../../store/actions/shopAction';\r\nimport UserAction from '../../store/actions/userAction';\r\nimport { StoreStateType } from '../../store/rootReducer';\r\nimport { BestSellerDispatchProps, BestSellerProps, BestSellerStateProps } from './inteface';\r\nimport './style.css';\r\n\r\nclass BestSeller extends React.Component<BestSellerProps> {\r\n    componentDidMount() {\r\n        const { bestSellerProducts } = this.props;\r\n        if(!bestSellerProducts.length) {\r\n            this.props.fetchAllBestSellerProducts();\r\n        }\r\n        \r\n    }\r\n\r\n    renderBestSellerProducts = () => {\r\n        const { bestSellerProducts, addToCart } = this.props;\r\n\r\n        return bestSellerProducts.map((product) => {\r\n            return (\r\n                <ProductCard\r\n                    key={product.id}\r\n                    product={product}\r\n                    addToCart={addToCart}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"best-seller-container\">\r\n                <h2>Best Seller</h2>\r\n                <div className=\"best-seller-products\">\r\n                    {this.renderBestSellerProducts()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<BestSellerStateProps, {}, StoreStateType> = (state) => {\r\n    return {\r\n        bestSellerProducts: state.shop.bestSellerProducts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToPropsFunction<BestSellerDispatchProps, {}> = (dispatch) => {\r\n    const { fetchAllBestSellerProducts } = new ShopAction();\r\n    const { addToCart } = new UserAction();\r\n\r\n    return {\r\n        fetchAllBestSellerProducts: () => dispatch(fetchAllBestSellerProducts()),\r\n        addToCart: (productPurchase) => dispatch(addToCart(productPurchase)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BestSeller);","import React from 'react';\r\nimport { Partners } from '../../components/Partners';\r\nimport { ShopQuality } from '../../components/ShopQuality';\r\nimport BestSeller from '../BestSeller';\r\nimport './style.css'\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"homepage-container\">\r\n                <div className=\"cover-image\" />\r\n                <ShopQuality />\r\n                <BestSeller />\r\n                <Partners />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { ModalProps } from './interface';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css';\r\n\r\nexport class Modal extends React.Component<ModalProps> {\r\n    root: HTMLDivElement;\r\n    el: HTMLDivElement;\r\n    constructor(props: ModalProps) {\r\n        super(props);\r\n\r\n        this.root = document.querySelector(\"#root\") as HTMLDivElement;\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.root.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.root.removeChild(this.el);\r\n    }\r\n\r\n    removeOnClickPropagation = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onClickOutsideModalBody = () => {\r\n        const { onClickOutsideModalBody } = this.props;\r\n\r\n        onClickOutsideModalBody && onClickOutsideModalBody();\r\n    }\r\n\r\n    render() {\r\n        const { show = true, modalBodyClassName } = this.props;\r\n        return show ? ReactDOM.createPortal(\r\n            <div onClick={this.removeOnClickPropagation} className=\"modal-container\">\r\n                <div onClick={this.onClickOutsideModalBody} className=\"modal-overlay\" />\r\n                <div className={`modal-body ${modalBodyClassName || ''}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>,\r\n            this.el\r\n        ) : null;\r\n    }\r\n}","import React from 'react';\r\nimport { getDiscountedPrice } from '../../utils/product';\r\nimport { ProductCardModalPriceUIProps } from './interface';\r\n\r\nexport const ProductCardModalPriceUI: React.FC<ProductCardModalPriceUIProps> = ({ selectedVariant }) => {\r\n    const { discount, price } = selectedVariant;\r\n\r\n    const priceUI = (\r\n        <p className=\"price-ui\">\r\n            {discount ? (\r\n                <React.Fragment>\r\n                    <del className=\"old-price\">{price}</del>\r\n                    <ins>${getDiscountedPrice(price, discount)}</ins>\r\n                </React.Fragment>\r\n            ): <ins>{price}</ins>}\r\n        </p>\r\n    );\r\n\r\n    return priceUI;\r\n}","import React from 'react';\r\nimport { ProductCardModalQuantityUIProps } from './interface';\r\n\r\nexport const ProductCardModalQuantityUI: React.FC<ProductCardModalQuantityUIProps> = ({ quantity, onClickAdd, onClickMinus }) => {\r\n    return (\r\n        <div className=\"quantity-container\">\r\n            <label className=\"quantity-container-label\">\r\n                <div><i onClick={onClickMinus} className=\"fa fa-minus qty-button\"></i></div>\r\n                <span className=\"qty-value\">QTY {quantity}</span>\r\n                <div><i onClick={onClickAdd} className=\"fa fa-plus qty-button\"></i></div>\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { getBackgroundColorStyleForButton } from '../../utils/product';\r\nimport { ProductCardModalVariantOptionsProps } from './interface';\r\n\r\nexport const ProductCardModalVariantOptions: React.FC<ProductCardModalVariantOptionsProps> = \r\n    ({ variants, selectedVariant, variantsOptionsAvailable, onColorChange, onSizeChange }) => {\r\n\r\n    const renderVariantOptionsContainer = (category: string, options: React.ReactNode[]) => {\r\n        return (\r\n            <div className=\"variant-container\">\r\n                <p className=\"variant-option-header\">{category}</p>\r\n                <div className=\"variant-option\">\r\n                    {options}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSizeChange = (size: string) => () => {\r\n        onSizeChange(size);\r\n    }\r\n\r\n    const handleColorChange = (color: string) => () => {\r\n        onColorChange(color);\r\n    }\r\n\r\n    const sizesUI: React.ReactNode[] = [];\r\n    const colorsUI: React.ReactNode[] = [];\r\n\r\n    const processData: string[] = [];\r\n\r\n    const variantButtonClassName = 'variant-option-button';\r\n\r\n    variants.forEach(({ size, color }) => {\r\n        if (!processData.includes(size)) {\r\n            sizesUI.push(\r\n                <Button\r\n                    className={`${variantButtonClassName} size`}\r\n                    onClick={handleSizeChange(size)}\r\n                    key={size}\r\n                    selected={selectedVariant.size === size}\r\n                    disabled={!variantsOptionsAvailable[size]}\r\n                >\r\n                    {size}\r\n                </Button>\r\n            );\r\n        }\r\n\r\n        processData.push(size);\r\n    });\r\n\r\n    variantsOptionsAvailable[selectedVariant.size].forEach(color => {\r\n        const backgroundStyle: React.CSSProperties = getBackgroundColorStyleForButton(color);\r\n\r\n        colorsUI.push(\r\n            <Button\r\n                style={backgroundStyle}\r\n                className={`${variantButtonClassName} color`}\r\n                key={color}\r\n                onClick={handleColorChange(color)}\r\n                selected={selectedVariant.color === color}\r\n            />\r\n\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className=\"variant-options-container\">\r\n            {renderVariantOptionsContainer('Sizes', sizesUI)}\r\n            {renderVariantOptionsContainer('Colors', colorsUI)}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Button } from '../../ui-components/Button';\r\nimport { Modal } from '../../ui-components/Modal';\r\nimport { ProductCardModalPriceUI } from '../ProductCardModalPriceUI';\r\nimport { ProductCardModalQuantityUI } from '../ProductCardModalQuantityUI';\r\nimport { ProductCardModalVariantOptions } from '../ProductCardModalVariantOptions';\r\nimport { ProductCardModalProps, ProductCardModalState } from './interface';\r\nimport './style.css';\r\n\r\nexport class ProductCardModal extends React.Component<ProductCardModalProps, ProductCardModalState> {\r\n    constructor(props: ProductCardModalProps) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            selectedVariant: props.initialVariant,\r\n            quantity: 1\r\n        }\r\n    }\r\n\r\n    handleClickQuantityAddButton = () => {\r\n        const { quantity, selectedVariant } = this.state;\r\n\r\n        selectedVariant.stock > quantity && this.setState({ quantity: quantity + 1 });\r\n    }\r\n\r\n    handleClickQuantityMinusButton = () => {\r\n        const { quantity } = this.state;\r\n\r\n        quantity > 1 && this.setState({ quantity: quantity - 1 });\r\n    }\r\n\r\n    handleSizeChange = (size: string) => {\r\n        const { selectedVariant } = this.state;\r\n        const { variants } = this.props;\r\n\r\n        if(selectedVariant.size !== size) {\r\n            this.setState({\r\n                selectedVariant: variants.filter(variant => variant.size === size && variant.stock > 0)[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleColorChange = (color: string) => {\r\n        const { selectedVariant } = this.state;\r\n        const { variants } = this.props;\r\n        \r\n        if(selectedVariant.color !== color) {\r\n            this.setState({\r\n                selectedVariant: variants.filter(variant => variant.size === selectedVariant.size && variant.color === color && variant.stock > 0)[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        const { selectedVariant, quantity } = this.state;\r\n        this.props.addToCart({ ...selectedVariant, quantity });\r\n    }\r\n\r\n    render() {\r\n        const { show, onClickOutsideModalBody, variants, variantsOptionsAvailable } = this.props;\r\n        const { selectedVariant, quantity } = this.state;\r\n        const { title, image } = selectedVariant;\r\n\r\n        return (\r\n            <Modal onClickOutsideModalBody={onClickOutsideModalBody} modalBodyClassName=\"product-card-modal-body\" show={show}>\r\n                <div className=\"modal-product-details-container\">\r\n                    <div className=\"modal-product-image-container\">\r\n                        <div style={{ backgroundImage: `url(${image})` }} className=\"modal-product-image\" />\r\n                    </div>\r\n                    <div className=\"modal-product-details\">\r\n                        <p className=\"modal-product-name\">{title}</p>\r\n                        <ProductCardModalPriceUI selectedVariant={selectedVariant} />\r\n                        <ProductCardModalQuantityUI\r\n                            quantity={quantity}\r\n                            onClickAdd={this.handleClickQuantityAddButton}\r\n                            onClickMinus={this.handleClickQuantityMinusButton}\r\n                        />\r\n                        <ProductCardModalVariantOptions\r\n                            selectedVariant={selectedVariant}\r\n                            variants={variants} \r\n                            onSizeChange={this.handleSizeChange}\r\n                            onColorChange={this.handleColorChange}\r\n                            variantsOptionsAvailable={variantsOptionsAvailable}\r\n                        />\r\n                        <Button type=\"primary\" onClick={this.handleAddToCart} className=\"add-to-cart-button\" >\r\n                            Add To Cart\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { ThemeContext } from '../../context/ThemeContext';\r\nimport { ProductPurchase } from '../../store/reducers/userReducer';\r\nimport { getProductVariantDetails } from '../../utils/product';\r\nimport { ProductCardModal } from '../ProductCardModal';\r\nimport { ProductCardProps, ProductCardState } from './interface';\r\nimport './style.css';\r\n\r\nexport class ProductCard extends React.Component<ProductCardProps, ProductCardState> {\r\n    constructor(props: ProductCardProps) {\r\n        super(props);\r\n        this.state = {\r\n            showDetails: false\r\n        }\r\n    }\r\n\r\n    onClickProductCard = () => {\r\n        this.setState({ showDetails: true });\r\n    }\r\n\r\n    onClickOutsideModalBody = () => {\r\n        this.setState({ showDetails: false });\r\n    }\r\n\r\n    handleAddToCart = (product: ProductPurchase) => {\r\n        this.props.addToCart(product);\r\n        this.setState({ showDetails: false });\r\n    }\r\n\r\n    render() {\r\n        const { showDetails } = this.state;\r\n        const { product, addToCart } = this.props;\r\n        const { initialVariant, variants, variantsOptionsAvailable } = getProductVariantDetails(product);\r\n\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {theme => (\r\n                    initialVariant ? (\r\n                        <div onClick={this.onClickProductCard} className={`product-card-container ${theme}`}>\r\n                            <div style={{ backgroundImage: `url(${initialVariant.image})` }} className=\"product-image\" />\r\n                            <div className=\"product-details\">\r\n                                <p>{initialVariant.title}</p>\r\n                            </div>\r\n                            <ProductCardModal\r\n                                onClickOutsideModalBody={this.onClickOutsideModalBody} \r\n                                show={showDetails}\r\n                                initialVariant={initialVariant} \r\n                                variants={variants} \r\n                                variantsOptionsAvailable={variantsOptionsAvailable}\r\n                                addToCart={this.handleAddToCart}\r\n                            />\r\n                        </div>\r\n                    ) : null\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}